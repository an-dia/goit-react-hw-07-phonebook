{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Container/Container.jsx","components/Title/Title.jsx","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","components/Alert/Alert.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-reducer.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.js","components/Loader/LoaderSpinner.js","App.js","redux/store.js","index.js","transitionsStyles/fade.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/Alert/Alert.module.css","transitionsStyles/searchFadeStyles.module.css","App.module.css","components/Container/Container.module.css","transitionsStyles/appear.module.css","components/Title/Title.module.css","transitionsStyles/fadeAlertStyle.module.css","components/ContactList/ContactList.module.css","components/Loader/LoaderSpinner.module.css"],"names":["module","exports","Container","children","className","s","container","Title","title","level","TagNameTitle","CSSTransition","in","appear","timeout","classNames","appearStyles","unmountOnExit","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","a","get","data","name","number","contact","post","then","catch","error","contactId","delete","Alert","text","Text","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getError","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","textAlert","inputNameId","shortid","generate","inputNumberId","handleSubmit","e","preventDefault","props","some","showAlert","onSubmit","reset","setState","setTimeout","handlerChange","currentTarget","value","this","alertStyle","form","label","htmlFor","input","type","id","placeholder","onChange","button","Component","connect","contactsSelectors","contactsOperations","createReducer","_","payload","combineReducers","event","target","inputFilterId","filterWrapper","ContactItem","onDeleteContact","listItem","onClick","ContactList","TransitionGroup","component","contactList","map","fadeStyles","LoaderSpinner","color","height","width","App","fetchContacts","Wrapper","style","message","length","searchFadeStyles","onExit","clearFilter","isLoadingContacts","visibleContacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","next","action","logger","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4f7204a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1CCV-\",\"label\":\"ContactForm_label__1u4Tw\",\"input\":\"ContactForm_input__13voB\",\"button\":\"ContactForm_button__3wIIn\"};","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import { CSSTransition } from 'react-transition-group';\nimport appearStyles from '../../transitionsStyles/appear.module.css';\nimport PropTypes from 'prop-types';\nimport s from './Title.module.css';\n\nconst Title = ({ title, level = 1 }) => {\n  const TagNameTitle = `h${level}`;\n  return (\n      <CSSTransition in ={true} appear={true} timeout={500} classNames={appearStyles} unmountOnExit>\n          <TagNameTitle className={s.Title}>{title}</TagNameTitle>\n      </CSSTransition>\n    )\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  level: PropTypes.number.isRequired,\n};\n\nexport default Title;\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n// export const clearFilter = createAction('contacts/clearFilter');\r\n\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\n// const fetchContacts = () => dispatch => {\r\n//   dispatch(fetchContactsRequest());\r\n\r\n//   axios.get('/contacts')\r\n//     .then(({ data }) => dispatch(fetchContactsSuccess(data)),\r\n//     )\r\n//   .catch(error => dispatch(fetchContactsError(error)));\r\n// } \r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    // test();\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n} \r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) =>\r\n      dispatch(addContactSuccess(data)),\r\n    )\r\n    .catch(error => dispatch(addContactError(error)));\r\n}\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios.delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)),\r\n  )\r\n  .catch(error => dispatch(deleteContactError(error)));\r\n}\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Alert.module.css';\r\n\r\nconst Alert = ({text}) => {\r\n  return (\r\n    <div className={s.Container}>\r\n      <p className={s.Text}>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\nconst getContacts = state => state.contacts.items; //getAllContacts\r\nconst getError = state => state.contacts.error;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\n\r\n\r\n// const getVisibleContacts = state => {\r\n//   const contacts = getContacts(state);\r\n//   console.log('contacts', contacts);\r\n//   const filter = getFilter(state);\r\n//   console.log('filter', filter);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return contacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizedFilter));\r\n// };\r\n\r\n//Мемоизированный селектор\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n     const normalizedFilter = filter.toLowerCase();\r\n  let list = contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter));\r\n  // if (!list.length) list = contacts;\r\n  return list;\r\n  });\r\n \r\nexport default {\r\n  getLoading,\r\n  getContacts,\r\n  getError,\r\n  getFilter,\r\n  getVisibleContacts,\r\n}","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/contacts-operations';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport shortid from 'shortid';\r\nimport Alert from '../Alert';\r\nimport alertStyle from '../../transitionsStyles/fadeAlertStyle.module.css';\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    error: false,\r\n    textAlert: '',\r\n  };\r\n\r\n  inputNameId = shortid.generate();\r\n  inputNumberId = shortid.generate();\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    if (name === '') {\r\n      this.showAlert('Please enter your contact name!');\r\n      return;\r\n    }\r\n\r\n    if (number === '') {\r\n      this.showAlert('Please enter the contact phone number!');\r\n      return;\r\n    }\r\n\r\n     if (this.props.contacts.some(contact => contact.name === name)) {\r\n       this.showAlert(`${name} is already in contacts`);\r\n       return;\r\n    }\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  showAlert = (text) => {\r\n    this.reset();\r\n    this.setState({ error: true, textAlert: text });\r\n    setTimeout(() => this.setState({ error: false}), 2000);\r\n \r\n}\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handlerChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { error, textAlert } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <CSSTransition in={error} classNames={alertStyle} timeout={250} unmountOnExit>\r\n          <Alert text={textAlert}/>\r\n        </CSSTransition>\r\n\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label} htmlFor={this.inputNameId}>\r\n          <span>\r\n            Name   \r\n          </span>\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          id={this.inputNameId}\r\n          value={this.state.name}\r\n          name=\"name\"\r\n          placeholder=\"Enter your name\"\r\n          // required\r\n          onChange={this.handlerChange}\r\n        />\r\n        <label className={s.label} htmlFor={this.inputNumberId}>\r\n          <span>\r\n            Number   \r\n          </span>\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          id={this.inputNumberId}\r\n          value={this.state.number}\r\n          name=\"number\"\r\n          placeholder=\"Enter your number\"\r\n          onChange={this.handlerChange}\r\n        />\r\n        <button className={s.button}>Add contact</button>\r\n      </form>\r\n      </>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(contactsOperations.addContact(name, number))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\n// console.log(actions.addContact.type);\r\n\r\nconst items = createReducer([], {\r\n  //actions.addContact.type вычисляемые свойства объекта(приведётся к строке и подставится свойство type )\r\n  [fetchContactsSuccess]: (_, {payload}) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, {payload}) => state.filter(({id}) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n})\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n})","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport shortid from 'shortid';\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\n// import * as contactsActions from '../../redux/contacts/contacts-actions';\n// import contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst Filter = ({ name, onChange }) => {\n  let inputFilterId = shortid.generate();\n  return (\n    <div className={s.filterWrapper}>\n      <label className={s.label} htmlFor={inputFilterId}>\n        <span>\n          Find contacts by name\n        </span>\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        placeholder=\"Search\"\n        id={inputFilterId}\n        value={name}\n        onChange={onChange} />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(changeFilter(event.target.value)),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import s from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <>\n      <li className={s.listItem}>\n        <p className={s.text}>\n          {name} : {number}\n        </p>\n        <button className={s.button} type=\"button\" onClick={onDeleteContact}>\n          Delete\n        </button>\n      </li>    \n    </>\n  );\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport s from './ContactList.module.css';\nimport fadeStyles from '../../transitionsStyles/fade.module.css';\nimport ContactItem from '../ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\"  className={s.contactList}>\n      {contacts.map(({ name, number, id }) => (\n        <CSSTransition key={id} timeout={250} classNames={fadeStyles}>\n          <ContactItem name={name} number={number} key={id} onDeleteContact={() => onDeleteContact(id)} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\n ContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n\n","import { connect } from 'react-redux';\r\nimport ContactList from './ContactList';\r\n// import contactsOperations from '../../redux/contacts/contacts-operations';\r\n// import contactsSelectors from '../../redux/contacts/contacts-selectors';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './LoaderSpinner.module.css';\r\n\r\nconst LoaderSpinner = () => (\r\n  <div className={s.Container}>\r\n    <Loader type=\"Hearts\" color=\"cornflowerblue\" height={60} width={60} />\r\n  </div>\r\n);\r\nexport default LoaderSpinner;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n// import appearFormStyles from './transitionsStyles/appearFormStyles.module.css';\r\nimport fadeStyles from './transitionsStyles/fade.module.css';\r\nimport searchFadeStyles from './transitionsStyles/searchFadeStyles.module.css';\r\nimport s from './App.module.css';\r\nimport Container from './components/Container';\r\nimport Title from './components/Title';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\nimport LoaderSpinner from './components/Loader';\r\n// import { render } from '@testing-library/react';\r\nimport {contactsOperations, contactsSelectors, changeFilter } from './redux/contacts';\r\n// import contactsOperations from './redux/contacts/contacts-operations';\r\n// import contactsSelectors from './redux/contacts/contacts-selectors';\r\n\r\nclass App extends Component {\r\n\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n    ),\r\n    visibleContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n    ),\r\n    fetchContacts: PropTypes.func,\r\n    clearFilter: PropTypes.func,\r\n    isLoadingContacts: PropTypes.bool,\r\n    error: PropTypes.bool,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  \r\nrender() {\r\n  return (\r\n    <Container>\r\n      <div className={s.Wrapper}>\r\n        {this.props.error ? <h1 style={{color:'red'}}>Error: {this.props.error.message}</h1> : null}\r\n      <Title title=\"Phonebook\" level={1} />\r\n      {/* <CSSTransition in={true} appear={true} timeout={500} classNames={appearFormStyles} unmountOnExit> */}\r\n      <ContactForm />\r\n      {/* </CSSTransition> */}\r\n      <Title title=\"Contacts\" level={2} />\r\n      <CSSTransition in={this.props.contacts.length > 1 } classNames={searchFadeStyles} timeout={250} unmountOnExit onExit={() => this.props.clearFilter()}>\r\n        <Filter />\r\n        </CSSTransition>\r\n        {this.props.isLoadingContacts && <LoaderSpinner/>}\r\n      <CSSTransition in={this.props.visibleContacts.length !== 0 || this.props.contacts.length > 1} classNames={fadeStyles} timeout={250} unmountOnExit>\r\n        <ContactList />\r\n      </CSSTransition>\r\n    </div>\r\n  </Container>)\r\n}\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  // console.log(state)\r\n  contacts: contactsSelectors.getContacts(state),\r\n  filter: contactsSelectors.getFilter(state),\r\n  isLoadingContacts: contactsSelectors.getLoading(state),\r\n  error: contactsSelectors.getError(state),\r\n  visibleContacts: contactsSelectors.getVisibleContacts(state),\r\n}\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n  clearFilter: () => dispatch(changeFilter('')),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  // persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport {contactsReducer} from './contacts';\r\n\r\nconst myMiddleware = store => next => action => {\r\n  // console.log('My middleware', action);\r\n  \r\n  //передаёт управление экшенам дальше по цепочке\r\n  next(action);\r\n}\r\n\r\n// console.log(getDefaultMiddleware());\r\nconst middleware = [...getDefaultMiddleware({\r\n  serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n}),\r\n  myMiddleware,\r\n  logger\r\n];\r\n\r\n//development or production\r\n// console.log(process.env.NODE_ENV);\r\nconst store = configureStore({\r\n  reducer: {\r\n  contacts: contactsReducer,\r\n},\r\n  middleware,\r\n  // devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n        <App />\n      {/* </PersistGate>   */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__3fP_K\",\"enterActive\":\"fade_enterActive__3wBSj\",\"exit\":\"fade_exit__1p80h\",\"exitActive\":\"fade_exitActive__1pXJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__-PrGA\",\"label\":\"Filter_label__mD29V\",\"input\":\"Filter_input__3azow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactItem_text__2PEJH\",\"button\":\"ContactItem_button__3oRzx\",\"listItem\":\"ContactItem_listItem__3sgZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Alert_Container__2_s03\",\"Text\":\"Alert_Text__spP61\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"searchFadeStyles_enter__159Zt\",\"enterActive\":\"searchFadeStyles_enterActive__1o5IK\",\"exit\":\"searchFadeStyles_exit__2En9J\",\"exitActive\":\"searchFadeStyles_exitActive__DQ2i0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"App_Wrapper__3YC8U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__E-9pD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"appear_appear__N6YGZ\",\"appearActive\":\"appear_appearActive__357W4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__2qBQb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeAlertStyle_enter__3tnyZ\",\"enterActive\":\"fadeAlertStyle_enterActive__1mrQF\",\"exit\":\"fadeAlertStyle_exit__2ruN6\",\"exitActive\":\"fadeAlertStyle_exitActive__3qS0X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1Zd4T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LoaderSpinner_Container__1XJOo\"};"],"sourceRoot":""}